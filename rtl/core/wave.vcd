$version Generated by VerilatedVcd $end
$date Sat Nov 26 12:12:48 2022 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 + clk $end
  $var wire  1 , rst_n $end
  $scope module riscx $end
   $var wire  1 + clk $end
   $var wire 32 - if2if_id_reg_instr [31:0] $end
   $var wire 32 . if2if_id_reg_pc [31:0] $end
   $var wire 32 ' if2pr_pc_next [31:0] $end
   $var wire 32 ( pr2if_pc [31:0] $end
   $var wire  1 , rst_n $end
   $scope module ifu $end
    $var wire  1 # dec_bjp $end
    $var wire 32 $ dec_bjp_imm [31:0] $end
    $var wire  1 1 dec_bxx $end
    $var wire  1 2 dec_jal $end
    $var wire  1 3 dec_jalr $end
    $var wire  5 4 dec_jalr_rs1_idx [4:0] $end
    $var wire 32 - if_instr_o [31:0] $end
    $var wire 32 ' if_pc_next_o [31:0] $end
    $var wire 32 . if_pc_o [31:0] $end
    $var wire 32 0 instr [31:0] $end
    $var wire  1 5 jalr_rs1_x0 $end
    $var wire  1 6 jalr_rs1_x1 $end
    $var wire 32 * pc_add_op1 [31:0] $end
    $var wire 32 & pc_add_op2 [31:0] $end
    $var wire 32 ( pc_i [31:0] $end
    $var wire 32 ) prdt_pc_add_op1 [31:0] $end
    $var wire 32 $ prdt_pc_add_op2 [31:0] $end
    $var wire  1 % prdt_taken $end
    $scope module fmd_1 $end
     $var wire 32 8 bjp_imm_bxx [31:0] $end
     $var wire 32 9 bjp_imm_jal [31:0] $end
     $var wire 32 : bjp_imm_jalr [31:0] $end
     $var wire 32 $ dec_bjp_imm_o [31:0] $end
     $var wire  1 # dec_bjp_o $end
     $var wire  1 1 dec_bxx_o $end
     $var wire  1 2 dec_jal_o $end
     $var wire  1 3 dec_jalr_o $end
     $var wire  5 4 dec_jalr_rs1_idx_o [4:0] $end
     $var wire 32 0 instr_i [31:0] $end
     $var wire  7 7 opcode [6:0] $end
    $upscope $end
   $upscope $end
   $scope module pru $end
    $var wire  1 + clk $end
    $var wire 32 ' pc_next_i [31:0] $end
    $var wire 32 ( pc_o [31:0] $end
    $var wire 32 ( pc_r [31:0] $end
    $var wire  1 , rst_n $end
    $var wire  1 / stall_i $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b00000000000000000000000000000000 $
0%
b00000000000000000000000000000100 &
b00000000000000000000000000000100 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
1+
1,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
0/
b00000000000000000000000000000000 0
01
02
03
b00000 4
15
06
b0000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
#1
0+
#2
b00000000000000000000000000001000 '
b00000000000000000000000000000100 (
b00000000000000000000000000000100 )
b00000000000000000000000000000100 *
1+
#3
0+
#4
b00000000000000000000000000001100 '
b00000000000000000000000000001000 (
b00000000000000000000000000001000 )
b00000000000000000000000000001000 *
1+
#5
0+
#6
b00000000000000000000000000010000 '
b00000000000000000000000000001100 (
b00000000000000000000000000001100 )
b00000000000000000000000000001100 *
1+
#7
0+
#8
b00000000000000000000000000010100 '
b00000000000000000000000000010000 (
b00000000000000000000000000010000 )
b00000000000000000000000000010000 *
1+
#9
0+
#10
b00000000000000000000000000011000 '
b00000000000000000000000000010100 (
b00000000000000000000000000010100 )
b00000000000000000000000000010100 *
1+
#11
0+
#12
b00000000000000000000000000011100 '
b00000000000000000000000000011000 (
b00000000000000000000000000011000 )
b00000000000000000000000000011000 *
1+
#13
0+
#14
b00000000000000000000000000100000 '
b00000000000000000000000000011100 (
b00000000000000000000000000011100 )
b00000000000000000000000000011100 *
1+
#15
0+
#16
b00000000000000000000000000100100 '
b00000000000000000000000000100000 (
b00000000000000000000000000100000 )
b00000000000000000000000000100000 *
1+
#17
0+
#18
b00000000000000000000000000101000 '
b00000000000000000000000000100100 (
b00000000000000000000000000100100 )
b00000000000000000000000000100100 *
1+
#19
0+
